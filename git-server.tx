

##  GENERAL

##  edit ~/.gitconfig to avoid main/master initial branch name conflicts
git config --global init.defaultBranch


##  SERVER INTERACTIONS

##  view current repo server syncs incl. protocol
git remote -v


##  SERVER INTERACTIONS VIA HTTP

##  sync local git with git server repo via http
git remote add origin https://git-server.com/user/repo

##  edit ~/.git/config to set default username for http commits
git config credential.username username-here

##  edit ~/.gitconfig to set credentials to store to disk at ~/.git-credentials
git config --global credential.helper 'store'

##  edit ~/.gitconfig to set RAM-based credentials cache timeout for commits (~0 due to speculative exec bugs)
git config --global credential.helper 'cache --timeout=1'


##  SERVER INTERACTIONS VIA SSH

##  get server pubkey for ~/.ssh/known_hosts and check server has client pubkey (after manually via website)
ssh -T git@git-server.com

## sync local git with git server repo via ssh
git remote add origin git@github.com:user/repo

##  clone via ssh
git clone git@git-server.com:user/repo.git

##  specify specific ssh key to use during push (or use ~/.ssh/config)
GIT_SSH_COMMAND='ssh -i ~/.ssh/your_key' && export GIT_SSH_COMMAND


##  BRANCHES TO/FROM SERVER

##  push local branch to server
git push -u origin test-branch

##  fetch info about branches from server
git fetch --all

##  show remote branches
git branch -r

##  download a branch to local git
git checkout -b branch_name


##  GPG SIGNED COMMITS

##  edit ~/.gitconfig to set commits to always be signed
git config --global commit.gpgsign true

##  edit ./.git/config to set key to use when signing commits
git config --local user.signingkey <KEY ID>

##  commit with gpg signature
git commit -S -m "about commit"

##  show signatures in commit log
git log --show-signature

